<?xml version="1.0" encoding="utf-8"?>

<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:cnxml="http://cnx.rice.edu/cnxml"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://cnx.rice.edu/cnxml">

<!--
    Attribute Definitions
-->

  <define name="id-attribute">
    <cnxml:para class="description">An attribute of the ID type, whose value must be unique within the module document.</cnxml:para>
    <attribute name="id">
      <data type="ID"/>
    </attribute>
  </define>

  <define name="class-attribute">
    <cnxml:para class="description">An attribute whose values authors may use to augment the semantics of the element to which it is applied.</cnxml:para>
    <cnxml:para class="content">Content: a space-separated list of text nodes (Relax NG 'token').</cnxml:para>
    <attribute name="class">
      <data type="token"/>
    </attribute>
  </define>

  <define name="foreign-namespaced-attribute">
    <cnxml:para class="description">Any attribute except (1) one not in a namespace; (2) one in the CNXML, CollXML, or Connexions system-info namespaces; and (3) @xml:lang.</cnxml:para>
    <zeroOrMore>
      <attribute>
        <anyName>
          <except>
            <nsName ns=""/>
            <nsName ns="http://cnx.rice.edu/cnxml"/>
            <nsName ns="http://cnx.rice.edu/collxml"/>
            <nsName ns="http://cnx.rice.edu/system-info"/>
            <name>xml:lang</name>
          </except>
        </anyName>
      </attribute>
    </zeroOrMore>
  </define>

  <!-- We enumerate supported values, but any text values are accepted. -->
  <define name="effect-attribute">
    <cnxml:para class="description">An attribute whose value specifies a display property for the content of the element to which the attribute is attached.</cnxml:para>
    <cnxml:para class="content">Content is text with no spaces (NMTOKEN).</cnxml:para>
    <attribute name="effect">
      <choice cnxml:class="supported-values">
        <value>bold</value>
        <value>italics</value>
        <value>underline</value>
        <value>normal</value>
        <value>smallcaps</value>
        <data type="NMTOKEN"/>
      </choice>
    </attribute>
  </define>

  <div>
    <cnxml:para class="description">An attribute that specifies how its parent element displays with respect to the flow of content. A value of 'block' causes the parent element to be set off from preceding and following text with vertical space; a value of 'inline' causes the parent element to be displayed continuously with any preceding and following content that is also 'inline'; a value of 'none' causes the element not to be rendered.</cnxml:para>
    <cnxml:list class="possible-values">
      <cnxml:title>Possible values:</cnxml:title>
      <cnxml:item>block</cnxml:item>
      <cnxml:item>inline</cnxml:item>
      <cnxml:item>none</cnxml:item>
    </cnxml:list>
    <define name="display-attribute">
      <optional>
        <choice>
          <ref name="display-block-attribute"/>
          <ref name="display-inline-attribute"/>
          <ref name="display-none-attribute"/>
        </choice>
      </optional>
    </define>

    <define name="display-block-default-attribute">
      <cnxml:para class="description">An attribute that specifies how a parent element in a block-only context displays with respect to the flow of content. A value of 'block' causes the parent element to be set off from preceding and following text with vertical space; a value of 'none' causes the element not to be rendered.</cnxml:para>
      <optional>
        <attribute name="display" a:defaultValue="block">
          <choice cnxml:class="possible-values">
            <value>block</value>
            <value>none</value>
          </choice>
        </attribute>
      </optional>
    </define>

    <define name="display-block-attribute">
      <cnxml:para class="description">An attribute that specifies how a parent element in a block-only context displays with respect to the flow of content. A value of 'block' causes the parent element to be set off from preceding and following text with vertical space; a value of 'none' causes the element not to be rendered.</cnxml:para>
      <attribute name="display">
        <choice cnxml:class="possible-values">
          <value>block</value>
          <value>none</value>
        </choice>
      </attribute>
    </define>

    <define name="display-inline-default-attribute">
      <optional>
        <attribute name="display" a:defaultValue="inline">
          <choice>
            <value>inline</value>
            <value>none</value>
          </choice>
        </attribute>
      </optional>
    </define>

    <define name="display-any-attribute">
      <optional>
        <attribute name="display">
          <choice>
            <value>block</value>
            <value>inline</value>
            <value>none</value>
          </choice>
        </attribute>
      </optional>
    </define>

    <define name="display-inline-attribute">
      <attribute name="display">
        <choice>
          <value>inline</value>
          <value>none</value>
        </choice>
      </attribute>
    </define>

    <define name="display-none-attribute">
      <attribute name="display">
        <value>none</value>
      </attribute>
    </define>
  </div>

  <define name="type-attribute">
    <cnxml:para class="description">An attribute whose value affects the numbering of its parent element.  Numbered elements are numbered with elements having the same element name and 'type' value.  Elements have a default 'type' identical to their element name.  Thus, a 'definition' with a type of 'lemma' will not be numbered in the same sequence with 'definition' elements having the default 'type' value.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <optional>
      <attribute name="type"/>
    </optional>
  </define>

  <define name="strength-attribute">
    <cnxml:para class="description">An attribute that indicates how strongly related the parent 'link' element is to the content in which it occurs.</cnxml:para>
    <attribute name="strength">
      <choice cnxml:class="possible-values">
        <value>1</value>
        <value>2</value>
        <value>3</value>
      </choice>
    </attribute>
  </define>

  <define name="window-attribute">
    <cnxml:para class="description">An attribute that instructs the browser either to replace the current window with the link target, or to open the link target in a new window, when the parent 'link' element is activated.</cnxml:para>
    <optional>
      <attribute name="window" a:defaultValue="replace">
        <choice cnxml:class="possible-values">
          <value>replace</value>
          <value>new</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="url-attribute">
    <cnxml:para class="description">An attribute containing the URL of the resource the parent link points to.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="url"/>
  </define>

  <define name="document-attribute">
    <cnxml:para class="description">An attribute containing the module or collection ID of the learning object the parent link points to.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="document"/>
  </define>

  <define name="version-attribute">
    <cnxml:para class="description">An attribute containing the version number of the learning object the parent link points to.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="version"/>
  </define>

  <define name="targetid-attribute">
    <cnxml:para class="description">An attribute containing the XML element ID of the element the parent link points to.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="target-id"/>
  </define>

  <define name="resource-attribute">
    <cnxml:para class="description">An attribute containing the XML element ID of the element the parent link points to.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="resource"/>
  </define>

  <!-- Attributes pattern for 'link' element.  Require at least one
       attribute that points to a link target: either @url, or at
       least one of the old cnxn-style linking attributes (@document,
       @targetid, or @resource).  It takes a little effort to make
       this pattern unambiguous.  -->
  <define name="link-attributes">
    <group>
      <optional>
        <ref name="strength-attribute"/>
      </optional>
      <ref name="window-attribute"/>
      <choice>
        <ref name="url-attribute"/>
        <group>
          <ref name="document-attribute"/>
          <ref name="version-attribute"/>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
        <group>
          <ref name="document-attribute"/>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
        <group>
          <ref name="version-attribute"/>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
        <group>
          <choice>
            <ref name="targetid-attribute"/>
            <ref name="resource-attribute"/>
          </choice>
        </group>
      </choice>
    </group>
  </define>

  <!-- For linking elements other than 'link'.  Here we can afford to
       make each attribute optional, so no problems with ambiguity.  -->
  <define name="linking-attributes">
    <group>
      <ref name="window-attribute"/>
      <choice>
        <optional>
          <ref name="url-attribute"/>
        </optional>
        <group>
          <optional>
            <ref name="document-attribute"/>
          </optional>
          <optional>
            <ref name="version-attribute"/>
          </optional>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
      </choice>
    </group>
  </define>

  <define name="note-type-attribute">
    <cnxml:para class="description">An attribute that controls the automatically generated label for the parent 'note' element.</cnxml:para>
    <cnxml:para class="content">Content is text, except the case-insensitive string 'footnote' (Relax NG).</cnxml:para>
    <optional>
      <attribute name="type" a:defaultValue="note">
        <choice cnxml:class="supported-values">
          <value>note</value>
          <value>aside</value>
          <value>warning</value>
          <value>tip</value>
          <value>important</value>
          <data type="token">
            <except>
              <data type="token">
                <param name="pattern">[fF][oO][oO][tT][nN][oO][tT][eE]</param>
              </data>
            </except>
          </data>
        </choice>
      </attribute>
    </optional>
  </define>

  <div>
    <cnxml:para class="description">An attribute whether the list's items should be rendered with bullets, enumerations, or labels as the item marks.</cnxml:para>
    <cnxml:list class="possible-values">
      <cnxml:title>Possible values:</cnxml:title>
      <cnxml:item>bulleted</cnxml:item>
      <cnxml:item>enumerated</cnxml:item>
      <cnxml:item>labeled-item</cnxml:item>
    </cnxml:list>
    <define name="list-type-attribute">
      <optional>
        <attribute name="list-type" a:defaultValue="bulleted">
          <choice>
            <value>bulleted</value>
            <value>enumerated</value>
            <value>labeled-item</value>
          </choice>
        </attribute>
      </optional>
    </define>

    <define name="bulleted-list-type-attribute">
      <optional>
        <attribute name="list-type" a:defaultValue="bulleted">
          <value>bulleted</value>
        </attribute>
      </optional>
    </define>

    <define name="enumerated-list-type-attribute">
      <attribute name="list-type">
        <value>enumerated</value>
      </attribute>
    </define>

    <define name="labeled-item-list-type-attribute">
      <attribute name="list-type">
        <value>labeled-item</value>
      </attribute>
    </define>
  </div>

  <define name="bullet-style-attribute">
    <cnxml:para class="description">An attribute that specifies the symbol to use for the bullets in the parent 'list' element's 'item' children.  May occur only on 'list' elements with a 'list-type' of 'bulleted'.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <optional>
      <attribute name="bullet-style" a:defaultValue="bullet">
        <choice cnxml:class="supported-values">
          <value>bullet</value>
          <value>open-circle</value>
          <value>pilcrow</value>
          <value>rpilcrow</value>
          <value>asterisk</value>
          <value>dash</value>
          <value>section</value>
          <value>none</value>
          <text/>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="number-style-attribute">
    <cnxml:para class="description">An attribute that style of number to use for the enumerations in the parent 'list' element's 'item' children.  May occur only on 'list' elements with a 'list-type' of 'enumerated'.</cnxml:para>
    <optional>
      <attribute name="number-style" a:defaultValue="arabic">
        <choice cnxml:class="possible-values">
          <value>arabic</value>
          <value>upper-alpha</value>
          <value>lower-alpha</value>
          <value>upper-roman</value>
          <value>lower-roman</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="mark-prefix-attribute">
    <cnxml:para class="description">An attribute that specifies characters that should appear beforethe marks of the 'item' children of the parent 'list' element.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <cnxml:para class="default-value">Default is the empty string.</cnxml:para>
    <optional>
      <attribute name="mark-prefix"/>
    </optional>
  </define>

  <define name="mark-suffix-attribute">
    <cnxml:para class="description">An attribute that specifies characters that should appear after the marks and before the content of the 'item' children of the parent 'list' element for lists whose 'list-type' attribute is 'enumerated'.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <cnxml:para class="default-value">Default is the period '.'.</cnxml:para>
    <optional>
      <attribute name="mark-suffix" a:defaultValue="."/>
    </optional>
  </define>

  <define name="bulleted-mark-suffix-attribute">
    <cnxml:para class="description">An attribute that specifies characters that should appear after the marks and before the content of the 'item' children of the parent 'list' element for lists whose 'list-type' attribute is 'bulleted'.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <cnxml:para class="default-value">Default is the empty string.</cnxml:para>
    <optional>
      <attribute name="mark-suffix" a:defaultValue=""/>
    </optional>
  </define>

  <define name="labeled-item-mark-suffix-attribute">
    <cnxml:para class="description">An attribute that specifies characters that should appear after the marks and before the content of the 'item' children of the parent 'list' element for lists whose 'list-type' attribute is 'labeled-item'.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <cnxml:para class="default-value">Default is the colon ':'.</cnxml:para>
    <optional>
      <attribute name="mark-suffix" a:defaultValue=":"/>
    </optional>
  </define>

  <define name="block-item-sep-attribute">
    <cnxml:para class="description">An attribute that specifies characters that should appear at the end of list items in 'list' elements whose 'list-type' attribute is 'block'.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <cnxml:para class="default-value">Default is the empty string.</cnxml:para>
    <optional>
      <attribute name="item-sep"/>
    </optional>
  </define>

  <define name="inline-item-sep-attribute">
    <cnxml:para class="description">An attribute that specifies characters that should appear at the end of list items in 'list' elements whose 'list-type' attribute is 'inline'.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <cnxml:para class="default-value">Default is the semicolon ';'.</cnxml:para>
    <optional>
      <attribute name="item-sep" a:defaultValue=";"/>
    </optional>
  </define>

  <define name="start-value-attribute">
    <cnxml:para class="description">An attribute that specifies the starting value of the enumerations of 'item' children of 'list' elements whose 'list-type' attribute is 'enumerated'.</cnxml:para>
    <cnxml:para class="content">Content is an integer >= 0 (XSD datatype).</cnxml:para>
    <cnxml:para class="default-value">Default is 1.</cnxml:para>
    <optional>
      <attribute name="start-value" a:defaultValue="1">
        <data type="integer">
          <param name="minInclusive">1</param>
        </data>
      </attribute>
    </optional>
  </define>

  <define name="code-lang-attribute">
    <cnxml:para class="description">An attribute whose value denotes the computer language of the code in the parent code element.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="lang"/>
  </define>

  <define name="alt-attribute">
    <cnxml:para class="description">An attribute whose value specifies alternate text for user agents that cannot display images and other audiovisual media.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="alt"/>
  </define>

  <define name="longdesc-attribute">
    <cnxml:para class="description">An attribute whose value specifies a longer description of the parent media object as a supplement to the alternate text in the 'alt' attribute.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG).</cnxml:para>
    <attribute name="longdesc"/>
  </define>

  <define name="height-attribute">
    <attribute name="height"/>
  </define>

  <define name="width-attribute">
    <attribute name="width"/>
  </define>

  <define name="print-width-attribute">
    <cnxml:para class="description">An attribute whose value specifies an absolute or proportional width for the parent media object when it is rendered in print.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG). Authors should supply a number followed by a two-letter abbreviation for units of length as used in LaTeX (e.g. <cnxml:list display="inline" item-sep=", " bullet-style="none"><cnxml:item>'cm'</cnxml:item><cnxml:item>'mm'</cnxml:item><cnxml:item>'in'</cnxml:item><cnxml:item>'pt'</cnxml:item><cnxml:item>'em'</cnxml:item><cnxml:item>'pc'</cnxml:item></cnxml:list>), or by a percent sign '%' for proportional scaling.</cnxml:para>
    <attribute name="print-width"/>
  </define>

  <define name="src-attribute">
    <cnxml:para class="description">An attribute whose value specifies a URL or filesystem path to the media object represented by the parent media object element.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG). Authors should supply a filesystem or URL path.</cnxml:para>
    <attribute name="src"/>
  </define>

  <define name="mime-type-attribute">
    <cnxml:para class="description">An attribute whose value specifies the type of media object represented by the parent media object element.</cnxml:para>
    <cnxml:para class="content">Content is text (Relax NG). Authors should supply a value from the IANA registry of MIME media types.</cnxml:para>
    <attribute name="mime-type"/>
  </define>

  <define name="for-attribute">
    <cnxml:para class="description">An attribute whose value specifies the output format for which the parent media object is intended.</cnxml:para>
    <cnxml:para class="content">Content is text (NMTOKEN).</cnxml:para>
    <attribute name="for">
      <choice cnxml:class="supported-values">
        <value>online</value>
        <value>pdf</value>
        <data type="NMTOKEN"/>
      </choice>
    </attribute>
  </define>

  <define name="thumbnail-attribute">
    <attribute name="thumbnail"/>
  </define>

  <define name="codebase-attribute">
    <attribute name="codebase"/>
  </define>

  <define name="code-attribute">
    <attribute name="code"/>
  </define>

  <define name="archive-attribute">
    <attribute name="archive"/>
  </define>

  <define name="name-attribute">
    <attribute name="name"/>
  </define>

  <define name="wmode-attribute">
    <attribute name="wmode">
      <choice>
        <value>window</value>
        <value>opaque</value>
        <value>transparent</value>
      </choice>
    </attribute>
  </define>

  <define name="quality-attribute">
    <attribute name="quality">
      <choice>
        <value>low</value>
        <value>autolow</value>
        <value>autohigh</value>
        <value>medium</value>
        <value>high</value>
      </choice>
    </attribute>
  </define>

  <define name="scale-attribute">
    <optional>
      <attribute name="scale" a:defaultValue="default">
        <choice>
          <value>default</value>
          <value>noorder</value>
          <value>exactfit</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="bgcolor-attribute">
    <attribute name="bgcolor">
      <data type="token">
        <param name="pattern">#[a-fA-F0-9]{6}</param>
      </data>
    </attribute>
  </define>

  <define name="flash-vars-attribute">
    <attribute name="flash-vars">
      <text/>
    </attribute>
  </define>

  <define name="standby-attribute">
    <optional>
      <attribute name="standby">
        <text/>
      </attribute>
    </optional>
  </define>

  <define name="autoplay-attribute">
    <optional>
      <attribute name="autoplay" a:defaultValue="false">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="loop-attribute">
    <optional>
      <attribute name="loop" a:defaultValue="false">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="controller-attribute">
    <optional>
      <attribute name="controller" a:defaultValue="false">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="volume-attribute">
    <optional>
      <attribute name="volume" a:defaultValue="50">
        <data type="integer">
          <param name="minInclusive">1</param>
          <param name="maxInclusive">100</param>
        </data>
      </attribute>
    </optional>
  </define>

  <define name="viname-attribute">
    <attribute name="viname"/>
  </define>

  <define name="labview-version-attribute">
    <attribute name="version">
      <choice>
        <value>7.0</value>
        <value>8.0</value>
        <value>8.2</value>
      </choice>
    </attribute>
  </define>

  <define name="pub-type">
    <cnxml:para class="description">An attribute that denotes the type of publication being cited by the parent 'cite-title' element.</cnxml:para>
    <attribute name="pub-type">
      <choice cnxml:class="possible-values">
        <value>article</value>
        <value>book</value>
        <value>booklet</value>
        <value>conference</value>
        <value>inbook</value>
        <value>incollection</value>
        <value>inproceedings</value>
        <value>manual</value>
        <value>mastersthesis</value>
        <value>misc</value>
        <value>phdthesis</value>
        <value>proceedings</value>
        <value>techreport</value>
        <value>unpublished</value>
      </choice>
    </attribute>
  </define>

  <define name="link-group-type-attribute">
    <attribute name="type">
      <choice>
        <value>prerequisite</value>
        <value>example</value>
        <value>supplemental</value>
        <text/>
      </choice>
    </attribute>
  </define>

  <define name="rule-type-attribute">
    <optional>
      <attribute name="type" a:defaultValue="rule">
        <choice>
          <value>rule</value>
          <value>theorem</value>
          <value>lemma</value>
          <value>corollary</value>
          <value>law</value>
          <value>proposition</value>
          <text/>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="seealso-type-attribute">
    <optional>
      <attribute name="type">
        <choice>
          <value>related-term</value>
          <value>narrower-term</value>
          <value>broader-term</value>
          <value>use-for</value>
          <value>use</value>
          <text/>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="cnxml-version">
    <attribute name="cnxml-version">
      <value>0.7</value>
    </attribute>
  </define>

  <define name="count-attribute">
    <optional>
      <attribute name="count" a:defaultValue="1">
        <data type="integer">
          <param name="minInclusive">1</param>
        </data>
      </attribute>
    </optional>
  </define>

  <define name="print-placement-attribute">
    <optional>
      <attribute name="print-placement">
        <choice>
          <value>here</value>
          <value>end</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="common-attributes-noclass">
    <ref name="foreign-namespaced-attribute"/>
    <optional>
      <attribute name="xml:lang"/>
    </optional>
  </define>

  <define name="common-attributes">
    <ref name="common-attributes-noclass"/>
    <optional>
      <ref name="class-attribute"/>
    </optional>
  </define>

<!--
    Content Classes
-->

  <define name="text-extras">
    <text/>
  </define>

  <define name="inline-class">
    <choice>
      <ref name="text-extras"/>
      <ref name="span"/>
      <ref name="term"/>
      <ref name="cite"/>
      <ref name="cite-title"/>
      <ref name="foreign"/>
      <ref name="emphasis"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="inline-code"/>
      <ref name="inline-preformat"/>
      <ref name="inline-quote"/>
      <ref name="inline-note"/>
      <ref name="inline-list"/>
      <ref name="inline-media"/>
      <ref name="footnote"/>
      <ref name="link"/>
      <ref name="newline"/>
      <ref name="space"/>
    </choice>
  </define>

  <define name="basic-blocks-class">
    <choice>
      <ref name='div'/>
      <ref name='definition'/>
      <ref name='example'/>
      <ref name='figure'/>
      <ref name='block-code'/>
      <ref name='block-preformat'/>
      <ref name='block-quote'/>
      <ref name='block-note'/>
      <ref name='block-media'/>
      <ref name='block-list'/>
      <ref name='table'/>
      <ref name='rule'/>
      <ref name='equation'/>
      <ref name='exercise'/>
    </choice>
  </define>

  <define name="para-content-class">
    <choice>
      <ref name="inline-class"/>
      <ref name="basic-blocks-class"/>
    </choice>
  </define>

  <define name="div-content-class">
    <choice>
      <ref name="para"/>
      <ref name="para-content-class"/>
    </choice>
  </define>

  <define name="section-content-class">
    <choice>
      <ref name="section"/>
      <ref name="basic-blocks-class"/>
      <ref name="para"/>
    </choice>
  </define>

  <define name="media-object-class">
    <choice>
      <ref name="object"/>
      <ref name="ximage"/>
      <ref name="audio"/>
      <ref name="video"/>
      <ref name="java-applet"/>
      <ref name="flash"/>
      <ref name="labview"/>
      <ref name="text"/>
      <ref name="download"/>
    </choice>
  </define>

  <define name="media-object-fallback-class">
    <choice>
      <ref name="text-extras"/>
      <ref name="span"/>
      <ref name="term"/>
      <ref name="cite"/>
      <ref name="cite-title"/>
      <ref name="foreign"/>
      <ref name="emphasis"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="inline-code"/>
      <ref name="inline-preformat"/>
      <ref name="inline-quote"/>
      <ref name="inline-note"/>
      <ref name="inline-list"/>
      <ref name="media-object-class"/>
    </choice>
  </define>
<!--
    Shared Content Models
-->

  <define name="inline-content">
    <ref name="common-attributes"/>
    <optional>
      <ref name="id-attribute"/>
    </optional>
    <zeroOrMore>
      <ref name="inline-class"/>
    </zeroOrMore>
  </define>

  <define name="div-content">
    <optional>
      <ref name="title"/>
    </optional>
    <oneOrMore>
      <ref name="div-content-class"/>
    </oneOrMore>
  </define>

  <define name="section-content">
    <ref name="common-attributes"/>
    <ref name="id-attribute"/>
    <ref name="type-attribute"/>
    <optional>
      <ref name="label"/>
    </optional>
    <optional>
      <ref name="title"/>
    </optional>
    <oneOrMore>
      <ref name="section-content-class"/>
    </oneOrMore>
  </define>

  <define name="statement-content">
    <ref name="section-content"/>
  </define>
<!--
    Element Definitions
-->

  <define name="anyElement">
    <element>
      <anyName/>
      <zeroOrMore>
	<choice>
	  <attribute>
	    <anyName/>
	  </attribute>
	  <text/>
	  <ref name="anyElement"/>
	</choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="document">
    <element name="document">
      <ref name="id-attribute"/><!-- Rename this object-id -->
      <ref name="common-attributes"/>
      <ref name="document-title"/>
      <ref name="cnxml-version"/>
      <attribute name="module-id"/>
      <optional>
        <ref name="metadata"/>
      </optional>
      <optional>
        <ref name="featured-links"/>
      </optional>
      <ref name="content"/>
      <optional>
        <ref name="glossary"/>
      </optional>
      <optional>
        <ref name="bibliography"/>
      </optional>
    </element>
  </define>

  <define name="metadata">
    <element name="metadata">
      <ref name="common-attributes"/>
      <ref name="metadata-extra-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="metadata-content"/>
    </element>
  </define>

  <define name="metadata-extra-attributes">
    <empty/>
  </define>

  <define name="featured-links">
    <element name="featured-links">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="link-group"/>
      </oneOrMore>
    </element>
  </define>

  <define name="link-group">
    <element name="link-group">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="link-group-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <oneOrMore>
        <ref name="link"/>
      </oneOrMore>
    </element>
  </define>

  <define name="metadata-content">
    <zeroOrMore>
      <choice>
        <ref name="anyElement"/>
        <text/>
      </choice>
    </zeroOrMore>
  </define>

  <define name="content">
    <element name="content">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="content-content"/>
    </element>
  </define>

  <define name="content-content">
    <oneOrMore>
      <ref name="section-content-class"/>
    </oneOrMore>
  </define>

  <define name="glossary">
    <element name="glossary">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="definition"/>
      </oneOrMore>
    </element>
  </define>

  <define name="bibliography">
    <empty/>
  </define>

  <define name="section">
    <element name="section">
      <ref name="section-content"/>
    </element>
  </define>

  <define name="div">
    <element name="div">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="block-preformat">
    <element name="preformat">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="display-block-default-attribute"/>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="inline-preformat">
    <element name="preformat">
      <ref name="display-inline-attribute"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="para">
    <element name="para">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="title"/>
      </optional>
      <oneOrMore>
        <ref name="para-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="title">
    <element name="title">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="document-title">
    <element name="title">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <text/>
    </element>
  </define>

  <define name="label">
    <element name="label">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="newline">
    <element name="newline">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="count-attribute"/>
      <optional>
        <ref name="effect-attribute"/>
      </optional>
    </element>
  </define>

  <define name="space">
    <element name="space">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="count-attribute"/>
      <optional>
        <ref name="effect-attribute"/>
      </optional>
    </element>
  </define>

  <define name="span">
    <element name="span">
      <optional>
        <ref name="effect-attribute"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="cite">
    <element name="cite">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="cite-title">
    <element name="cite-title">
      <optional>
        <ref name="pub-type"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="link">
    <element name="link">
      <ref name="link-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="emphasis">
    <element name="emphasis">
      <optional>
        <ref name="effect-attribute"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="term">
    <element name="term">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="sub">
    <element name="sub">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="sup">
    <element name="sup">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="block-quote">
    <element name="quote">
      <ref name="display-block-default-attribute"/>
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="type-attribute"/>
      <ref name="linking-attributes"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="inline-quote">
    <element name="quote">
      <ref name="display-inline-attribute"/>
      <ref name="linking-attributes"/>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="foreign">
    <element name="foreign">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="footnote">
    <element name="footnote">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="div-content"/>
    </element>
  </define>

<!-- FIXME: Do we want to continue to permit 'media' or text in 'equation'? -->
  <define name="equation">
    <element name="equation">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <choice>
        <ref name="media"/>
        <text/>
        <ref name="equation-content-extras"/>
      </choice>
    </element>
  </define>

  <define name="equation-content-extras">
    <empty/>
  </define>

  <define name="block-note">
    <element name="note">
      <ref name="display-block-default-attribute"/>
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="note-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="inline-note">
    <element name="note">
      <ref name="display-inline-attribute"/>
      <ref name="note-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="note">
    <choice>
      <ref name="block-note"/>
      <ref name="inline-note"/>
    </choice>
  </define>

  <define name="list-common-content">
    <ref name="common-attributes"/>
    <ref name="mark-prefix-attribute"/>
    <ref name="type-attribute"/>
  </define>

  <define name="block-list-common-content">
    <ref name="display-block-default-attribute"/>
    <ref name="id-attribute"/>
    <ref name="block-item-sep-attribute"/>
    <optional>
      <ref name="label"/>
    </optional>
    <optional>
      <ref name="title"/>
    </optional>
    <oneOrMore>
      <ref name="block-list-item"/>
    </oneOrMore>
  </define>

  <define name="inline-list-common-content">
    <ref name="display-inline-attribute"/>
    <optional>
      <ref name="id-attribute"/>
    </optional>
    <ref name="inline-item-sep-attribute"/>
    <optional>
      <ref name="label"/>
    </optional>
    <optional>
      <ref name="title"/>
    </optional>
    <oneOrMore>
      <ref name="inline-list-item"/>
    </oneOrMore>
  </define>

  <define name="bulleted-list-common-content">
    <ref name="bulleted-list-type-attribute"/>
    <ref name="bulleted-mark-suffix-attribute"/>
    <ref name="bullet-style-attribute"/>
    <ref name="list-common-content"/>
  </define>

  <define name="bulleted-block-list">
    <element name="list">
      <ref name="bulleted-list-common-content"/>
      <ref name="block-list-common-content"/>
    </element>
  </define>

  <define name="bulleted-inline-list">
    <element name="list">
      <ref name="bulleted-list-common-content"/>
      <ref name="inline-list-common-content"/>
    </element>
  </define>

  <define name="enumerated-list-common-content">
    <ref name="mark-suffix-attribute"/>
    <ref name="enumerated-list-type-attribute"/>
    <ref name="number-style-attribute"/>
    <ref name="start-value-attribute"/>
    <ref name="list-common-content"/>
  </define>

  <define name="enumerated-block-list">
    <element name="list">
      <ref name="enumerated-list-common-content"/>
      <ref name="block-list-common-content"/>
    </element>
  </define>

  <define name="enumerated-inline-list">
    <element name="list">
      <ref name="enumerated-list-common-content"/>
      <ref name="inline-list-common-content"/>
    </element>
  </define>

  <define name="labeled-item-list-common-content">
    <ref name="labeled-item-mark-suffix-attribute"/>
    <ref name="labeled-item-list-type-attribute"/>
    <ref name="list-common-content"/>
  </define>

  <define name="labeled-item-block-list">
    <element name="list">
      <ref name="labeled-item-list-common-content"/>
      <ref name="block-list-common-content"/>
    </element>
  </define>

  <define name="labeled-item-inline-list">
    <element name="list">
      <ref name="labeled-item-list-common-content"/>
      <ref name="inline-list-common-content"/>
    </element>
  </define>

  <define name="block-list">
    <choice>
      <ref name="bulleted-block-list"/>
      <ref name="enumerated-block-list"/>
      <ref name="labeled-item-block-list"/>
    </choice>
  </define>

  <define name="inline-list">
    <choice>
      <ref name="bulleted-inline-list"/>
      <ref name="enumerated-inline-list"/>
      <ref name="labeled-item-inline-list"/>
    </choice>
  </define>

  <define name="list">
    <choice>
      <ref name="block-list"/>
      <ref name="inline-list"/>
    </choice>
  </define>

  <define name="block-list-item">
    <element name="item">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <zeroOrMore>
        <ref name="div-content-class"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="inline-list-item">
    <element name="item">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <optional>
        <ref name="label"/>
      </optional>
      <zeroOrMore>
        <ref name="inline-class"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="inline-code">
    <element name="code">
      <ref name="display-inline-default-attribute"/>
      <optional>
        <ref name="code-lang-attribute"/>
      </optional>
      <ref name="type-attribute"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="common-attributes"/>
      <oneOrMore>
        <ref name="inline-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="block-code">
    <element name="code">
      <ref name="display-block-attribute"/>
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="code-lang-attribute"/>
      </optional>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
          <ref name="title"/>
      </optional>
      <oneOrMore>
        <ref name="inline-class"/>
      </oneOrMore>
      <optional>
          <ref name="caption"/>
      </optional>
    </element>
  </define>

  <define name="code">
    <choice>
      <ref name="inline-code"/>
      <ref name="block-code"/>
    </choice>
  </define>

<!-- NOTE: I have removed 'table' and 'code' as possible content for
     'figure', but this decision can be revisited. -->
  <define name="figure">
    <element name="figure">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <attribute name="orient" a:defaultValue="horizontal">
          <choice>
            <value>horizontal</value>
            <value>vertical</value>
          </choice>
        </attribute>
      </optional>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <choice>
        <ref name="media"/>
        <ref name="table"/>
        <ref name="code"/>
        <group>
          <ref name="subfigure"/>
          <oneOrMore>
            <ref name="subfigure"/>
          </oneOrMore>
        </group>
      </choice>
      <optional>
        <ref name="caption"/>
      </optional>
    </element>
  </define>

  <define name="subfigure">
    <element name="subfigure">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <choice>
        <ref name="media"/>
        <ref name="table"/>
        <ref name="code"/>
      </choice>
      <optional>
        <ref name="caption"/>
      </optional>
    </element>
  </define>

  <define name="caption">
    <element name="caption">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="media-common-content">
    <ref name="common-attributes"/>
    <ref name="id-attribute"/>
    <ref name="alt-attribute"/>
    <optional>
      <ref name="longdesc"/>
    </optional>
    <ref name="media-object-class"/>
    <zeroOrMore>
      <ref name="media-object-class"/>
    </zeroOrMore>
  </define>

  <define name="inline-media">
    <element name="media">
      <optional>
        <ref name="display-inline-attribute"/>
      </optional>
      <ref name="media-common-content"/>
    </element>
  </define>

  <define name="block-media">
    <element name="media">
      <ref name="display-any-attribute"/>
      <ref name="media-common-content"/>
    </element>
  </define>

  <define name="nodisplay-media">
    <element name="media">
      <ref name="display-none-attribute"/>
      <ref name="media-common-content"/>
    </element>
  </define>

  <define name="longdesc-element">
    <element name="longdesc">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="longdesc">
    <choice>
      <ref name="longdesc-attribute"/>
      <ref name="longdesc-element"/>
    </choice>
  </define>

  <define name="media">
    <choice>
      <ref name="block-media"/>
      <ref name="inline-media"/>
    </choice>
  </define>

  <define name="param">
    <element name="param">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <attribute name="name"/>
      <attribute name="value"/>
    </element>
  </define>

<!-- @src must be handled per-element -->
  <define name="media-object-common-content">
    <ref name="common-attributes"/>
    <optional>
      <ref name="id-attribute"/>
    </optional>
    <optional>
      <ref name="height-attribute"/>
    </optional>
    <optional>
      <ref name="width-attribute"/>
    </optional>
    <ref name="mime-type-attribute"/>
    <optional>
      <ref name="for-attribute"/>
    </optional>
    <optional>
      <ref name="longdesc"/>
    </optional>
    <zeroOrMore>
      <ref name="param"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="media-object-fallback-class"/>
    </zeroOrMore>
  </define>

  <define name="audio-video-common-content">
    <ref name="media-object-common-content"/>
    <ref name="src-attribute"/>
    <ref name="standby-attribute"/>
    <ref name="autoplay-attribute"/>
    <ref name="loop-attribute"/>
    <ref name="controller-attribute"/>
    <ref name="volume-attribute"/>
  </define>

  <define name="object">
    <element name="object">
      <ref name="media-object-common-content"/>
      <ref name="src-attribute"/>
    </element>
  </define>

  <define name="ximage">
    <element name="image">
      <ref name="media-object-common-content"/>
      <ref name="src-attribute"/>
      <optional>
        <ref name="print-width-attribute"/>
      </optional>
      <optional>
        <ref name="thumbnail-attribute"/>
      </optional>
    </element>
  </define>

  <define name="audio">
    <element name="audio">
      <ref name="audio-video-common-content"/>
    </element>
  </define>

  <define name="video">
    <element name="video">
      <ref name="audio-video-common-content"/>
    </element>
  </define>

  <define name="java-applet">
    <element name="java-applet">
      <ref name="media-object-common-content"/>
      <optional>
        <ref name="src-attribute"/>
      </optional>
      <optional>
        <ref name="codebase-attribute"/>
      </optional>
      <ref name="code-attribute"/>
      <optional>
        <ref name="archive-attribute"/>
      </optional>
      <optional>
        <ref name="name-attribute"/>
      </optional>
    </element>
  </define>

  <define name="flash">
    <element name="flash">
      <ref name="media-object-common-content"/>
      <ref name="src-attribute"/>
      <optional>
        <ref name="wmode-attribute"/>
      </optional>
      <optional>
        <ref name="loop-attribute"/>
      </optional>
      <optional>
        <ref name="quality-attribute"/>
      </optional>
      <optional>
        <ref name="scale-attribute"/>
      </optional>
      <optional>
        <ref name="bgcolor-attribute"/>
      </optional>
      <optional>
        <ref name="flash-vars-attribute"/>
      </optional>
    </element>
  </define>

  <define name="labview">
    <element name="labview">
      <ref name="media-object-common-content"/>
      <ref name="src-attribute"/>
      <ref name="viname-attribute"/>
      <ref name="labview-version-attribute"/>
    </element>
  </define>

  <define name="text">
    <element name="text">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <optional>
        <ref name="height-attribute"/>
      </optional>
      <optional>
        <ref name="width-attribute"/>
      </optional>
      <optional>
        <ref name="mime-type-attribute"/>
      </optional>
      <optional>
        <ref name="longdesc"/>
      </optional>
      <zeroOrMore>
        <ref name="param"/>
      </zeroOrMore>
      <optional>
        <ref name="src-attribute"/>
      </optional>
      <optional>
        <ref name="for-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="div-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="download">
    <element name="download">
      <ref name="media-object-common-content"/>
      <ref name="src-attribute"/>
    </element>
  </define>

  <define name="example">
    <element name="example">
      <ref name="section-content"/>
    </element>
  </define>

  <define name="exercise">
    <element name="exercise">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="print-placement-attribute"/>
      <ref name="type-attribute"/>
      <choice>
        <group>
          <optional>
            <ref name="label"/>
          </optional>
          <optional>
            <ref name="title"/>
          </optional>
          <ref name="problem"/>
          <zeroOrMore>
            <ref name="solution"/>
          </zeroOrMore>
          <optional>
            <ref name="commentary"/>
          </optional>
        </group>
        <ref name="exercise-content-extras"/>
      </choice>
    </element>
  </define>

  <define name="exercise-content-extras">
    <empty/>
  </define>

  <define name="problem">
    <element name="problem">
      <ref name="section-content"/>
    </element>
  </define>

  <define name="solution">
    <element name="solution">
      <ref name="print-placement-attribute"/>
      <ref name="section-content"/>
    </element>
  </define>

  <define name="commentary">
    <element name="commentary">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <oneOrMore>
        <ref name="div-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="definition">
    <element name="definition">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="term"/>
      <choice>
        <ref name="seealso"/>
        <group>
          <oneOrMore>
            <ref name="meaning"/>
            <zeroOrMore>
              <ref name="example"/>
            </zeroOrMore>
          </oneOrMore>
          <optional>
            <ref name="seealso"/>
          </optional>
        </group>
      </choice>
    </element>
  </define>

  <define name="meaning">
    <element name="meaning">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="seealso">
    <element name="seealso">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="seealso-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <oneOrMore>
        <ref name="term"/>
      </oneOrMore>
    </element>
  </define>

  <define name="rule">
    <element name="rule">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="rule-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <oneOrMore>
        <ref name="statement"/>
      </oneOrMore>
      <zeroOrMore>
        <choice>
          <ref name="proof"/>
          <ref name="example"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>

  <define name="statement">
    <element name="statement">
      <ref name="statement-content"/>
    </element>
  </define>

  <define name="proof">
    <element name="proof">
      <ref name="statement-content"/>
    </element>
  </define>

<!--
    CALS Table Definitions
 -->

  <define name="bodyatt">
    <empty/>
  </define>

  <define name="secur">
    <empty/>
  </define>

  <define name="yesorno">
    <data type="integer">
      <param name="minInclusive">0</param>
    </data>
  </define>

  <define name="colsep-attribute">
    <optional>
      <attribute name="colsep">
        <ref name="yesorno"/>
      </attribute>
    </optional>
  </define>

  <define name="rowsep-attribute">
    <optional>
      <attribute name="rowsep">
        <ref name="yesorno"/>
      </attribute>
    </optional>
  </define>

  <define name="align-attribute">
    <attribute name="align">
      <choice>
        <value>left</value>
        <value>right</value>
        <value>center</value>
        <value>justify</value>
        <value>char</value>
      </choice>
    </attribute>
  </define>

  <define name="valign-attribute">
    <optional>
      <attribute name="valign">
        <choice>
          <value>top</value>
          <value>middle</value>
          <value>bottom</value>
        </choice>
      </attribute>
    </optional>
  </define>

  <define name="char-attribute">
    <attribute name="char"/>
  </define>

  <define name="charoff-attribute">
    <attribute name="charoff"/>
  </define>

  <define name="cols-attribute">
    <attribute name="cols"/>
  </define>

  <define name="colname-attribute">
    <attribute name="colname"/>
  </define>

  <define name="spanname-attribute">
    <attribute name="spanname"/>
  </define>

  <define name="morerows-attribute">
    <attribute name="morerows"/>
  </define>

  <define name="namest-attribute">
    <attribute name="namest"/>
  </define>

  <define name="nameend-attribute">
    <attribute name="nameend"/>
  </define>

  <define name="table.title">
    <ref name="title"/>
  </define>

  <define name="table-main.mdl">
    <oneOrMore>
      <ref name="tgroup"/>
    </oneOrMore>
  </define>

  <define name="table.mdl">
    <optional>
      <ref name="label"/>
    </optional>
    <optional>
      <ref name="table.title"/>
    </optional>
    <ref name="table-main.mdl"/>
    <optional>
      <ref name="caption"/>
    </optional>
  </define>

  <define name="table.att">
    <ref name="id-attribute"/>
    <optional>
      <attribute name="tabstyle"/>
    </optional>
    <optional>
      <attribute name="tocentry">
        <ref name="yesorno"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="shortentry">
        <ref name="yesorno"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="orient">
        <choice>
          <value>port</value>
          <value>land</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="pgwide">
        <ref name="yesorno"/>
      </attribute>
    </optional>
  </define>

  <define name="tgroup.mdl">
    <zeroOrMore>
      <ref name="colspec"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="spanspec"/>
    </zeroOrMore>
    <optional>
      <ref name="thead"/>
    </optional>
    <optional>
      <ref name="tfoot"/>
    </optional>
    <ref name="tbody"/>
  </define>

  <define name="tgroup.att">
    <optional>
      <attribute name="tgroupstyle">
        <text/>
      </attribute>
    </optional>
  </define>

  <define name="hdft.mdl">
    <zeroOrMore>
      <ref name="colspec"/>
    </zeroOrMore>
    <oneOrMore>
      <ref name="row"/>
    </oneOrMore>
  </define>

  <define name="row.mdl">
    <oneOrMore>
      <choice>
        <ref name="entry"/>
        <ref name="entrytbl"/>
      </choice>
    </oneOrMore>
  </define>

  <define name="entrytbl.mdl">
    <zeroOrMore>
      <ref name="colspec"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="spanspec"/>
    </zeroOrMore>
    <optional>
      <ref name="thead"/>
    </optional>
    <ref name="tbody"/>
  </define>

  <define name="entry.mdl">
    <zeroOrMore>
      <ref name="div-content-class"/>
    </zeroOrMore>
  </define>

  <define name="table">
    <element name="table">
      <optional>
        <attribute name="frame">
          <choice>
            <value>top</value>
            <value>bottom</value>
            <value>topbot</value>
            <value>all</value>
            <value>sides</value>
            <value>none</value>
          </choice>
        </attribute>
      </optional>
      <attribute name="summary"/>
      <ref name="colsep-attribute"/>
      <ref name="rowsep-attribute"/>
      <ref name="table.att"/>
      <ref name="bodyatt"/>
      <ref name="secur"/>
      <ref name="type-attribute"/>
      <ref name="common-attributes"/>
      <ref name="table.mdl"/>
    </element>
  </define>

  <define name="tgroup">
    <element name="tgroup">
      <ref name="cols-attribute"/>
      <ref name="tgroup.att"/>
      <ref name="colsep-attribute"/>
      <ref name="rowsep-attribute"/>
      <optional>
        <ref name="align-attribute"/>
      </optional>
      <optional>
        <ref name="char-attribute"/>
      </optional>
      <optional>
        <ref name="charoff-attribute"/>
      </optional>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="tgroup.mdl"/>
    </element>
  </define>

  <define name="colspec">
    <element name="colspec">
      <optional>
        <attribute name="colnum"/>
      </optional>
      <optional>
        <attribute name="colname"/>
      </optional>
      <optional>
        <attribute name="colwidth"/>
      </optional>
      <ref name="colsep-attribute"/>
      <ref name="rowsep-attribute"/>
      <optional>
        <ref name="align-attribute"/>
      </optional>
      <optional>
        <ref name="char-attribute"/>
      </optional>
      <optional>
        <ref name="charoff-attribute"/>
      </optional>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
    </element>
  </define>

  <define name="spanspec">
    <element name="spanspec">
      <optional>
        <attribute name="namest"/>
      </optional>
      <optional>
        <attribute name="nameend"/>
      </optional>
      <ref name="spanname-attribute"/>
      <optional>
        <attribute name="colwidth"/>
      </optional>
      <ref name="colsep-attribute"/>
      <ref name="rowsep-attribute"/>
      <optional>
        <ref name="align-attribute"/>
      </optional>
      <optional>
        <ref name="char-attribute"/>
      </optional>
      <optional>
        <ref name="charoff-attribute"/>
      </optional>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
    </element>
  </define>

  <define name="thead">
    <element name="thead">
      <ref name="valign-attribute"/>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="hdft.mdl"/>
    </element>
  </define>

  <define name="tfoot">
    <element name="tfoot">
      <ref name="valign-attribute"/>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="hdft.mdl"/>
    </element>
  </define>

  <define name="tbody">
    <element name="tbody">
      <ref name="valign-attribute"/>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="row"/>
      </oneOrMore>
    </element>
  </define>

  <define name="row">
    <element name="row">
      <ref name="rowsep-attribute"/>
      <ref name="valign-attribute"/>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="row.mdl"/>
    </element>
  </define>

  <define name="entrytbl">
    <element name="entrytbl">
      <ref name="cols-attribute"/>
      <ref name="tgroup.att"/>
      <optional>
        <ref name="colname-attribute"/>
      </optional>
      <optional>
        <ref name="spanname-attribute"/>
      </optional>
      <optional>
        <ref name="namest-attribute"/>
      </optional>
      <optional>
        <ref name="nameend-attribute"/>
      </optional>
      <ref name="colsep-attribute"/>
      <ref name="rowsep-attribute"/>
      <optional>
        <ref name="align-attribute"/>
      </optional>
      <optional>
        <ref name="char-attribute"/>
      </optional>
      <optional>
        <ref name="charoff-attribute"/>
      </optional>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="entrytbl.mdl"/>
    </element>
  </define>

  <define name="entry">
    <element name="entry">
      <optional>
        <ref name="colname-attribute"/>
      </optional>
      <optional>
        <ref name="namest-attribute"/>
      </optional>
      <optional>
        <ref name="nameend-attribute"/>
      </optional>
      <optional>
        <ref name="spanname-attribute"/>
      </optional>
      <optional>
        <ref name="morerows-attribute"/>
      </optional>
      <ref name="colsep-attribute"/>
      <ref name="rowsep-attribute"/>
      <optional>
        <ref name="align-attribute"/>
      </optional>
      <optional>
        <ref name="char-attribute"/>
      </optional>
      <optional>
        <ref name="charoff-attribute"/>
      </optional>
      <optional>
        <attribute name="rotate">
          <ref name="yesorno"/>
        </attribute>
      </optional>
      <ref name="valign-attribute"/>
      <ref name="secur"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="entry.mdl"/>
    </element>
  </define>

</grammar>
